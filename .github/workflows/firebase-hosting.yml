name: Firebase Hosting CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --prefix frontend

      - name: Build project
        run: npm run build --prefix frontend

      - name: Deploy to Firebase Hosting on merge
        if: github.event_name == 'push' && secrets.FIREBASE_SERVICE_ACCOUNT_YOUR_PROJECT_NAME != ''
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          # Replace 'YOUR_PROJECT_NAME' with the name of your Firebase project.
          # This secret should contain the content of the Firebase service account JSON file.
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_YOUR_PROJECT_NAME }}'
          channelId: live
          # Replace 'your-project-id' with your Firebase project ID.
          projectId: your-project-id

      - name: Deploy to Firebase Hosting on PR
        if: github.event_name == 'pull_request' && secrets.FIREBASE_SERVICE_ACCOUNT_YOUR_PROJECT_NAME != ''
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          # Replace 'YOUR_PROJECT_NAME' with the name of your Firebase project.
          # This secret should contain the content of the Firebase service account JSON file.
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_YOUR_PROJECT_NAME }}'
          # Replace 'your-project-id' with your Firebase project ID.
          projectId: your-project-id
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
